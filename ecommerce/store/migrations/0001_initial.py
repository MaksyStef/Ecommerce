# Generated by Django 4.1.6 on 2023-02-26 15:13

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import store.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AbstractCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(editable=False, null=True)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AbstractContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now=True)),
                ('price', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Product price')),
                ('discount', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Discount percent')),
                ('sellable', models.BooleanField(default=True)),
                ('sold', models.PositiveIntegerField(default=0)),
                ('bonus_points', models.PositiveIntegerField(blank=True, editable=False, null=True)),
                ('title', models.CharField(max_length=255, verbose_name='Product title')),
                ('slug', models.SlugField(default=uuid.uuid4, editable=False, unique=True)),
                ('description', models.TextField(verbose_name='Product description')),
                ('article', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(999999999999999999), django.core.validators.MinValueValidator(0)])),
                ('in_stock', models.PositiveIntegerField(default=0)),
                ('image_general', models.ImageField(blank=True, null=True, upload_to='store/images/products/general/')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='Accompanying',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('store.product', store.models.ProductChildMixin),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('abstractcategory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.abstractcategory')),
                ('is_filter', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
            bases=('store.abstractcategory',),
        ),
        migrations.CreateModel(
            name='Flashlight',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('power', models.PositiveIntegerField(default=0)),
                ('battery_capacity', models.PositiveIntegerField(default=0)),
                ('width', models.PositiveIntegerField(default=0)),
                ('length', models.PositiveIntegerField(default=0)),
                ('thickness', models.PositiveIntegerField(default=0)),
                ('materials', models.PositiveIntegerField(default=0)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('store.product', store.models.ProductChildMixin),
        ),
        migrations.CreateModel(
            name='Knife',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('total_length', models.PositiveIntegerField(default=0)),
                ('edge_length', models.PositiveIntegerField(default=0)),
                ('edge_width', models.PositiveIntegerField(default=0)),
                ('image_edge', models.ImageField(blank=True, null=True, upload_to='store/images/products/knives/edge/')),
                ('image_case', models.ImageField(blank=True, null=True, upload_to='store/images/products/knives/case/')),
                ('image_handle', models.ImageField(blank=True, null=True, upload_to='store/images/products/knives/handle/')),
                ('image_guard_and_back', models.ImageField(blank=True, null=True, upload_to='store/images/products/knives/guard_and_back/')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('store.product', store.models.ProductChildMixin),
        ),
        migrations.CreateModel(
            name='Melee',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('total_length', models.PositiveIntegerField(default=0)),
                ('edge_length', models.PositiveIntegerField(default=0)),
                ('edge_width', models.PositiveIntegerField(default=0)),
                ('spike_thickness', models.PositiveIntegerField(default=0)),
                ('image_edge', models.ImageField(blank=True, null=True, upload_to='store/images/products/melee/edge/')),
                ('image_case', models.ImageField(blank=True, null=True, upload_to='store/images/products/melee/case/')),
                ('image_handle', models.ImageField(blank=True, null=True, upload_to='store/images/products/melee/handle/')),
                ('image_guard_and_back', models.ImageField(blank=True, null=True, upload_to='store/images/products/melee/guard_and_back/')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('store.product', store.models.ProductChildMixin),
        ),
        migrations.CreateModel(
            name='Souvenir',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('store.product', store.models.ProductChildMixin),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(editable=False, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('user', models.ForeignKey(default=None, editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='votes',
            field=models.ManyToManyField(to='store.vote'),
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('abstractcategory_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.abstractcategory')),
                ('cat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.category')),
            ],
            options={
                'abstract': False,
            },
            bases=('store.abstractcategory',),
        ),
        migrations.AddField(
            model_name='product',
            name='cats',
            field=models.ManyToManyField(editable=False, to='store.category'),
        ),
        migrations.AddField(
            model_name='product',
            name='subcats',
            field=models.ManyToManyField(to='store.subcategory'),
        ),
        migrations.CreateModel(
            name='AbstractProductContainer',
            fields=[
                ('abstractcontainer_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.abstractcontainer')),
                ('products', models.ManyToManyField(to='store.product')),
            ],
            options={
                'abstract': False,
            },
            bases=('store.abstractcontainer',),
        ),
    ]
